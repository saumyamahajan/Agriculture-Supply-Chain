{"ast":null,"code":"var _jsxFileName = \"C:\\\\Saumya\\\\Projects\\\\Agri\\\\client\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter as Router, Routes, Route, useParams, Navigate, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react'; // import { Alert } from 'react-alert'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    type\n  } = useParams();\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [passward, setPassward] = useState('');\n  const [submitted, setSubmitted] = useState(false); //const [state, setState] = useState('')\n  //const [user, setUser] = useState([]);\n\n  const [user, setUser] = useState({\n    userName: \"\",\n    email: \"\",\n    passward: \"\",\n    type: \"\"\n  });\n\n  const submit = async e => {\n    e.preventDefault();\n    setSubmitted(true); //console.log(userName);\n    //console.log(email);\n    //console.log(passward);\n\n    const userDetails = {\n      userName: userName,\n      email: email,\n      passward: passward\n    };\n    await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userDetails)\n    }) //.then(res => console.log(res[0]));\n    .then(res => res.json()).then(res => {\n      console.log(res[0]); //setUser(res[0]); \n\n      setUser(previousState => {\n        return { ...previousState,\n          userName: userName,\n          email: email,\n          passward: passward,\n          type: type\n        };\n      }); //setUserName(res[0].userName)\n    });\n    console.log(\"user:\" + user);\n    console.log(\"uname:\" + userName);\n    console.log(\"uemail:\" + email); //console.log(user[0]);\n\n    sessionStorage.setItem(\"userName\", userName);\n    sessionStorage.setItem(\"email\", email);\n    sessionStorage.setItem(\"passward\", passward);\n    sessionStorage.setItem(\"userType\", type); // not working\n    // {<Navigate replace to=\"/farmer\" />}\n\n    navigate('/farmer');\n  }; // Handling the email change\n\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n    setSubmitted(false);\n  }; // Handling the password change\n\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n    setSubmitted(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Login : \", type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEmail,\n        className: \"input\",\n        value: email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePassword,\n        className: \"input\",\n        value: password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"6KdpCZAQnU2v4pXqP1Erg+RCpzM=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","BrowserRouter","Router","Routes","Route","useParams","Navigate","useNavigate","useState","useEffect","Login","navigate","type","userName","setUserName","email","setEmail","passward","setPassward","submitted","setSubmitted","user","setUser","submit","e","preventDefault","userDetails","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","previousState","sessionStorage","setItem","handleEmail","target","value","handlePassword","setPassword","password","handleSubmit"],"sources":["C:/Saumya/Projects/Agri/client/src/pages/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Routes, Route, useParams, Navigate, useNavigate} from \"react-router-dom\";\r\nimport { useState, useEffect} from 'react';\r\n// import { Alert } from 'react-alert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const { type } = useParams();\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [passward, setPassward] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    //const [state, setState] = useState('')\r\n    //const [user, setUser] = useState([]);\r\n    const [user,setUser] = useState({\r\n      userName: \"\",\r\n      email: \"\",\r\n      passward: \"\",\r\n      type: \"\"\r\n    });\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        //console.log(userName);\r\n        //console.log(email);\r\n        //console.log(passward);\r\n        \r\n      const userDetails = {\r\n          userName : userName,\r\n          email : email,\r\n          passward : passward,\r\n      }\r\n \r\n      await fetch('/api/user/login', {\r\n        method: 'POST',\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userDetails),\r\n          })\r\n          //.then(res => console.log(res[0]));\r\n          .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res[0]);\r\n                //setUser(res[0]); \r\n                setUser(previousState => {\r\n                  return { ...previousState, userName : userName,\r\n                    email : email,\r\n                    passward : passward, type:type }\r\n                });\r\n                //setUserName(res[0].userName)\r\n            })\r\n\r\n        console.log(\"user:\"+user); \r\n        console.log(\"uname:\"+ userName);\r\n        console.log(\"uemail:\"+email);\r\n        //console.log(user[0]);\r\n        \r\n        sessionStorage.setItem(\"userName\", userName);\r\n        sessionStorage.setItem(\"email\", email);\r\n        sessionStorage.setItem(\"passward\", passward);\r\n        sessionStorage.setItem(\"userType\", type);\r\n\r\n   \r\n\r\n        // not working\r\n        // {<Navigate replace to=\"/farmer\" />}\r\n        navigate('/farmer');\r\n    }\r\n\r\n\r\n\r\n// Handling the email change\r\nconst handleEmail = (e) => {\r\n  setEmail(e.target.value);\r\n  setSubmitted(false);\r\n};\r\n\r\n// Handling the password change\r\nconst handlePassword = (e) => {\r\n  setPassword(e.target.value);\r\n  setSubmitted(false);\r\n};\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login : {type}</h1>\r\n\r\n            \r\n            <br></br>\r\n            {/* <form action=\"\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"UserName\"\r\n            name=\"userName\"\r\n            value={userName}\r\n            onChange={e => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Passward\"\r\n            value={passward}\r\n            onChange={e => setPassward(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary\" onClick={submit}>\r\n            Submit\r\n          </button>\r\n          <button className=\"btn btn-danger\">\r\n            Register\r\n          </button>\r\n        </div>\r\n      </form> */}\r\n\r\n<form>\r\n        {/* Labels and inputs for form data */}\r\n       \r\n \r\n        <label className=\"label\">Email</label>\r\n        <input onChange={handleEmail} className=\"input\"\r\n          value={email} type=\"email\" />\r\n \r\n        <label className=\"label\">Password</label>\r\n        <input onChange={handlePassword} className=\"input\"\r\n          value={password} type=\"password\" />\r\n \r\n        <button onClick={handleSubmit} className=\"btn\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Login "],"mappings":"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"},"metadata":{},"sourceType":"module"}