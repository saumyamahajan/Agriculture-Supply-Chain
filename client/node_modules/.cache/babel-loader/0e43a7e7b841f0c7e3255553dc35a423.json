{"ast":null,"code":"var _jsxFileName = \"C:\\\\Saumya\\\\Projects\\\\Agri\\\\client\\\\src\\\\pages\\\\ActivityEdit.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from '../components/WithRouter';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActivityEdit extends Component {\n  constructor(props) {\n    super(props); // this.state = {activityDetails : this.activityDetails};\n    // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.activityDetails = {\n      _id: '',\n      name: '',\n      startDate: '',\n      endDate: '',\n      activityProof: '' // people : [],  \n      // asset : [], \n      // material : []\n\n    };\n  }\n\n  async componentDidMount() {\n    let farmerId = this.props.params.id;\n    console.log(\"farmer id : \" + farmerId); // if(id !== 'new'){\n    //     fetch('/api/activity/'+id)\n    //     .then(res => res.json())\n    //     .then(res => {\n    //         console.log(res[0])\n    //         this.setState({activityDetails: res[0]}); \n    //     })\n    // }\n  }\n\n  // async handleSubmit(event) {\n  //     event.preventDefault();\n  //     const {activityDetails} = this.state;\n  //     console.log(\"activityDetails : \" + activityDetails._id);\n  //     await fetch('/api/activity' + (activityDetails._id ? '/' + activityDetails._id : ''), {\n  //         method: (activityDetails._id) ? 'PUT' : 'POST',\n  //         headers: {\n  //             'Accept': 'application/json',\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(activityDetails),\n  //     });\n  //     this.props.navigate('/activity');          \n  // }\n  // handleChange(event) {\n  //     const target = event.target;\n  //     const value = target.value;\n  //     const name = target.name;\n  //     let activityDetails = {...this.state.activityDetails};\n  //     activityDetails[name] = value;\n  //     this.setState({activityDetails});\n  // }\n  //to handle input change.\n  // handleChange(event) {\n  //     const {name, value} = event.target\n  //     this.setState({\n  //         [name]: value\n  //     }) \n  // }\n  render() {\n    //const {activityDetails} = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ActivityEdit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              onChange: this.handleChange,\n              autoComplete: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"startDate\",\n              children: \"StartDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              name: \"startDate\",\n              id: \"startDate\",\n              onChange: this.handleChange,\n              autoComplete: \"startDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"endDate\",\n              children: \"EndDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              name: \"endDate\",\n              id: \"endDate\",\n              onChange: this.handleChange,\n              autoComplete: \"endDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"activityProof\",\n              children: \"ActivityProof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"test\",\n              name: \"activityProof\",\n              id: \"activityProof\",\n              onChange: this.handleChange,\n              autoComplete: \"activityProof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: () => navigate(-1),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ActivityEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","withRouter","Button","Container","Form","FormGroup","Input","Label","Link","ActivityEdit","constructor","props","activityDetails","_id","name","startDate","endDate","activityProof","componentDidMount","farmerId","params","id","console","log","render","handleSubmit","handleChange","navigate"],"sources":["C:/Saumya/Projects/Agri/client/src/pages/ActivityEdit.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from '../components/WithRouter';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ActivityEdit extends Component {\r\n\r\n    activityDetails = {\r\n        _id : '',\r\n        name: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        activityProof: '',\r\n        // people : [],  \r\n        // asset : [], \r\n        // material : []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {activityDetails : this.activityDetails};\r\n        // this.handleChange = this.handleChange.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n\r\n    async componentDidMount() {\r\n        let farmerId = this.props.params.id;\r\n        console.log(\"farmer id : \" + farmerId);\r\n        // if(id !== 'new'){\r\n        //     fetch('/api/activity/'+id)\r\n        //     .then(res => res.json())\r\n        //     .then(res => {\r\n        //         console.log(res[0])\r\n        //         this.setState({activityDetails: res[0]}); \r\n        //     })\r\n        // }\r\n        \r\n    };\r\n\r\n    // async handleSubmit(event) {\r\n    //     event.preventDefault();\r\n    //     const {activityDetails} = this.state;\r\n    //     console.log(\"activityDetails : \" + activityDetails._id);\r\n    //     await fetch('/api/activity' + (activityDetails._id ? '/' + activityDetails._id : ''), {\r\n    //         method: (activityDetails._id) ? 'PUT' : 'POST',\r\n    //         headers: {\r\n    //             'Accept': 'application/json',\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify(activityDetails),\r\n    //     });\r\n\r\n    //     this.props.navigate('/activity');          \r\n    // }\r\n\r\n    // handleChange(event) {\r\n    //     const target = event.target;\r\n    //     const value = target.value;\r\n    //     const name = target.name;\r\n    //     let activityDetails = {...this.state.activityDetails};\r\n    //     activityDetails[name] = value;\r\n    //     this.setState({activityDetails});\r\n    // }\r\n\r\n    //to handle input change.\r\n    // handleChange(event) {\r\n    //     const {name, value} = event.target\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     }) \r\n    // }\r\n\r\n    render() {\r\n        //const {activityDetails} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>ActivityEdit</h1>\r\n                <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    {/* value={activityDetails.name || ''} value={activityDetails.startDate || ''} value={activityDetails.endDate || value={activityDetails.activityProof || ''} ''}*/}\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" \r\n                               onChange={this.handleChange} autoComplete=\"name\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"startDate\">StartDate</Label>\r\n                        <Input type=\"date\" name=\"startDate\" id=\"startDate\" \r\n                               onChange={this.handleChange} autoComplete=\"startDate\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"endDate\">EndDate</Label>\r\n                        <Input type=\"date\" name=\"endDate\" id=\"endDate\" \r\n                               onChange={this.handleChange} autoComplete=\"endDate\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"activityProof\">ActivityProof</Label>\r\n                        <Input type=\"test\" name=\"activityProof\" id=\"activityProof\" \r\n                               onChange={this.handleChange} autoComplete=\"activityProof\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                        {/* <Button color=\"secondary\" tag={Link} to=\"/farmer/:id\">Cancel</Button> */}\r\n                        <Button color=\"secondary\" onClick={() => navigate(-1)}>Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                    \r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(ActivityEdit)\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}