[{"C:\\Saumya\\Projects\\Agri\\client\\src\\index.js":"1","C:\\Saumya\\Projects\\Agri\\client\\src\\App.js":"2","C:\\Saumya\\Projects\\Agri\\client\\src\\reportWebVitals.js":"3","C:\\Saumya\\Projects\\Agri\\client\\src\\components\\Navbar.js":"4","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Profile.js":"5","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\About.js":"6","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Home.js":"7","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Farmer.js":"8","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\FarmerEdit.js":"9","C:\\Saumya\\Projects\\Agri\\client\\src\\components\\WithRouter.js":"10","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\ActivityEdit.js":"11","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\AssetEdit.js":"12","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\MaterialConsumedEdit.js":"13","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\PeopleEdit.js":"14","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Contact.js":"15","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Test.js":"16","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Test1.js":"17","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\FileUpload.js":"18","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Login.js":"19"},{"size":611,"mtime":1658594045958,"results":"20","hashOfConfig":"21"},{"size":2126,"mtime":1658726026169,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1656782905098,"results":"23","hashOfConfig":"21"},{"size":1841,"mtime":1657939375924,"results":"24","hashOfConfig":"21"},{"size":11304,"mtime":1658574895193,"results":"25","hashOfConfig":"21"},{"size":5085,"mtime":1657871348169,"results":"26","hashOfConfig":"21"},{"size":433,"mtime":1658588985292,"results":"27","hashOfConfig":"21"},{"size":3322,"mtime":1658594050792,"results":"28","hashOfConfig":"21"},{"size":4020,"mtime":1657476020644,"results":"29","hashOfConfig":"21"},{"size":447,"mtime":1656833713157,"results":"30","hashOfConfig":"21"},{"size":7913,"mtime":1658572874058,"results":"31","hashOfConfig":"21"},{"size":6327,"mtime":1657781678616,"results":"32","hashOfConfig":"21"},{"size":5662,"mtime":1657784477527,"results":"33","hashOfConfig":"21"},{"size":6239,"mtime":1657703012801,"results":"34","hashOfConfig":"21"},{"size":2535,"mtime":1658576258617,"results":"35","hashOfConfig":"21"},{"size":3386,"mtime":1657688491040,"results":"36","hashOfConfig":"21"},{"size":2990,"mtime":1657685129407,"results":"37","hashOfConfig":"21"},{"size":1304,"mtime":1658557431806,"results":"38","hashOfConfig":"21"},{"size":2286,"mtime":1658736663712,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"mpg0vx",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"43"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"43"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"43"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"43"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Saumya\\Projects\\Agri\\client\\src\\index.js",[],[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\App.js",[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\reportWebVitals.js",[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\components\\Navbar.js",["108"],[],"import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        Navbar\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavDropdown\"\r\n        aria-controls=\"navbarNavDropdown\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              Home <span className=\"sr-only\"></span>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/Farmer\">\r\n              Farmers\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/About\">\r\n                About\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/Contact\">\r\n              Contact Us\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/Test\">\r\n              Test using class\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/Test1\">\r\n              Test1 using function\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/fileupload\">\r\n              Test file upload\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Profile.js",["109","110","111"],[],"import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from '../components/WithRouter';\r\n//import Navbar from '../components/Navbar';\r\n\r\nclass Profile extends React.Component {\r\n    \r\n    // activityDetails = {\r\n    //     _id : '',\r\n    //     farmerId : this.props.params.id,\r\n    //     name: '',\r\n    //     startDate: '',\r\n    //     endDate: '',\r\n    //     activityProof: '',\r\n    //      people : [],  \r\n    //      asset : [], \r\n    //      material : []\r\n    // };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activities: []};\r\n       // this.state = {activityDetails : this.activityDetails};\r\n    }\r\n\r\n    componentDidMount() {\r\n        let farmerId = this.props.params.id;\r\n        console.log(\"farmer id : \" + farmerId);\r\n        fetch('/api/activity/'+farmerId)\r\n            .then(response => response.json())\r\n            .then(data => {this.setState({activities: data})\r\n           // this.setState({activityDetails: data})\r\n           });\r\n    }\r\n\r\n    async removeActivity(id) {\r\n        console.log(\"delete id : \" + id);\r\n        await fetch(`/api/activity/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n             let updatedActivity = [...this.state.activities].filter(i => i._id !== id);\r\n             this.setState({activities: updatedActivity});\r\n        });\r\n     \r\n    }\r\n\r\n    async removePeople(activityId , peopleId) {\r\n        console.log(\"delete id : \" + activityId + \"/\" + peopleId);\r\n        await fetch('/api/activity/people/'  + activityId + \"/\" + peopleId, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            //  let updatedActivity = [...this.state.activities].filter(obj => \r\n            //      obj.people.peopleId!=peopleId)\r\n            //  console.log('my people: ', updatedActivity);\r\n\r\n            const result = this.state.activities.map(item => ({\r\n                ...item,\r\n                people: item.people\r\n                  .filter(child => child.peopleId !== peopleId)\r\n              }))\r\n              //.filter(item => item.people.length > 0)\r\n          \r\n              console.log(result)\r\n\r\n             //this.setState({activities: updatedActivity});\r\n             this.setState({activities: result});\r\n        });\r\n \r\n    }\r\n\r\n    async removeAsset(activityId , assetId) {\r\n        console.log(\"delete id : \" + activityId + \"/\" + assetId);\r\n        await fetch('/api/activity/asset/'  + activityId + \"/\" + assetId, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            //  let updatedActivity = [...this.state.activities].filter(\r\n            //     //i => i.assetId !== assetId\r\n            //     obj => obj.asset.assetId!=assetId\r\n            //     );\r\n            \r\n            //  this.setState({activities: updatedActivity});\r\n\r\n            const result = this.state.activities.map(item => ({\r\n                ...item,\r\n                asset: item.asset\r\n                  .filter(child => child.assetId !== assetId)\r\n              }))\r\n              //.filter(item => item.asset.length > 0)\r\n          \r\n              console.log(result)\r\n             this.setState({activities: result});\r\n        });\r\n \r\n    }\r\n\r\n    async removeMaterialConsumed(activityId , materialConsumedId) {\r\n        console.log(\"delete id : \" + activityId + \"/\" + materialConsumedId);\r\n        await fetch('/api/activity/materialConsumed/'  + activityId + \"/\" + materialConsumedId, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            //  let updatedActivity = [...this.state.activities].filter(\r\n            //     //i => i.materialConsumedlinkId !== materialConsumedlinkId\r\n            //     // table name : material\r\n            //     obj => obj.material.materialConsumedlinkId!=materialConsumedlinkId\r\n            //     );\r\n            \r\n            //  this.setState({activities: updatedActivity});\r\n\r\n            const result = this.state.activities.map(item => ({\r\n                ...item,\r\n                material: item.material\r\n                  .filter(child => child.materialConsumedId !== materialConsumedId)\r\n              }))\r\n              //.filter(item => item.material.length > 0)\r\n          \r\n              console.log(result)\r\n             this.setState({activities: result});\r\n        });\r\n \r\n    }\r\n\r\n    render() {\r\n        const {activities} = this.state;\r\n\r\n        const mystyle = {\r\n            // color: \"white\",\r\n            // backgroundColor: \"DodgerBlue\",\r\n            // padding: \"10px\",\r\n            // fontFamily: \"Arial\",\r\n            position:\"relative\",\r\n            left:\"70px\", \r\n            top:\"2px\", \r\n            // right: \"80px\"\r\n            //'color': 'green',\r\n            //'border': '1px solid black'\r\n            'textAlign': 'center',\r\n          };\r\n\r\n          const mainstyle = {\r\n            'textAlign': 'center',\r\n            'color': 'black',\r\n          // 'border': '1px solid black'\r\n            \r\n            }\r\n\r\n            const style1={\r\n                'margin-left': '140px',\r\n                'margin-right':'240px'\r\n            } \r\n \r\n        let farmerId = this.props.params.id;\r\n\r\n        // '/' required to avoid concatination to the previous links\r\n        const linkId = \"/activity/\" + farmerId + \"/\";\r\n        const peopleLinkId = \"/activity/people/\";\r\n        const assetLinkId = \"/activity/asset/\";\r\n        const materialConsumedlinkId = \"/activity/materialConsumed/\";\r\n\r\n            const activityList = activities.map((activity,index) => \r\n       \r\n             <div style={style1}><br></br><br></br><h5>Activities:{index + 1}</h5>\r\n                \r\n             <Table >\r\n                <thead>\r\n               \r\n                <tr>\r\n                    <th width=\"15%\">Name</th>\r\n                    <th width=\"10%\" >Start Date</th>\r\n                    <th width=\"10%\" >End Date</th>\r\n                    <th width=\"10%\" >Activity Proof</th>  \r\n                    <th width=\"30%\" ><ButtonGroup><Button  onClick={() => this.removeActivity(activity._id)}>Del Activity</Button></ButtonGroup></th>     \r\n                </tr>\r\n                </thead>\r\n\r\n                <tr key={activity._id}>\r\n                <td>{activity.name}</td>\r\n                <td>{new Date(activity.startDate).getDate()}</td>\r\n                <td>{new Date(activity.endDate).getDate()}</td>\r\n                <td>{activity.activityProof}</td>\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={linkId + activity._id}>Edit</Button>\r\n                        {/* <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(activity._id)}>Delete</Button> */}\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n            </Table>\r\n\r\n                                                  \r\n        <div style={mystyle}>\r\n            <table width=\"65%\"  > <thead>     \r\n                <tr> <th width=\"25%\" >People Name</th>\r\n                    <th width=\"25%\">People Work</th>\r\n                    <th width=\"25%\">People Wages</th>\r\n                    <th width=\"20%\" align=\"right\"><Button color=\"success\" tag={Link} to={peopleLinkId + farmerId + \"/\" + activity._id + \"/new\"}>Add People</Button></th>\r\n                 </tr></thead>   \r\n\r\n                 {   activity.people.map(personObj => \r\n                    <tr key={personObj.peopleId} >    \r\n                        <td>{personObj.peopleName}</td><td>{personObj.peopleWork}</td><td>{personObj.peopleWages}</td>\r\n                        <td><ButtonGroup><Button size=\"sm\" color=\"primary\" tag={Link} to={peopleLinkId + farmerId + \"/\" + activity._id + \"/\" + personObj.peopleId}>Edit</Button><Button size=\"sm\" color=\"danger\" onClick={() => this.removePeople(activity._id, personObj.peopleId)}>Delete</Button></ButtonGroup></td> \r\n                    </tr>\r\n                  )}\r\n             </table>        \r\n        </div>       \r\n       \r\n\r\n        <div style={mystyle}>\r\n            <table  width=\"66%\"> <thead>     \r\n               <tr> <th width=\"20%\">Asset Name</th>\r\n                    <th width=\"20%\">Asset Driver</th>\r\n                   <th width=\"20%\">Asset Details</th>\r\n                   <th width=\"20%\">Asset Wages</th>\r\n                   <th width=\"30%\" align=\"right\"><Button color=\"success\" tag={Link} to={assetLinkId + farmerId + \"/\" + activity._id + \"/new\"}>Add Asset</Button></th>\r\n                </tr></thead>    \r\n                {   activity.asset.map(assetObj => \r\n                    <tr key={assetObj.assetId}>    \r\n                        <td>{assetObj.assetName}</td><td>{assetObj.assetDriver}</td><td>{assetObj.assetDetails}</td><td>{assetObj.assetWages}</td>\r\n                        <td><ButtonGroup><Button size=\"sm\" color=\"primary\" tag={Link} to={assetLinkId + farmerId + \"/\" + activity._id + \"/\" + assetObj.assetId}>Edit</Button><Button size=\"sm\" color=\"danger\" onClick={() => this.removeAsset(activity._id, assetObj.assetId)}>Delete</Button></ButtonGroup></td> \r\n                    </tr> \r\n                )}\r\n            </table>\r\n        </div>\r\n\r\n        <div style = {mystyle}>\r\n            <table width=\"69%\"> <thead>     \r\n               <tr> <th width=\"35%\" >Material Consumed Receipt</th>\r\n                   <th width=\"35%\">Material Consumed Details</th>\r\n                   <th width=\"30%\" align=\"right\"><Button color=\"success\" tag={Link} to={materialConsumedlinkId + farmerId + \"/\" + activity._id + \"/new\"}>Add Materials</Button></th>\r\n                </tr></thead>    \r\n                {   activity.material.map(materialObj => \r\n                    <tr>    \r\n                        <td >{materialObj.materialConsumedReceipt}</td><td>{materialObj.materialConsumedDetails}</td>\r\n                        <td><ButtonGroup><Button size=\"sm\" color=\"primary\"tag={Link} to={materialConsumedlinkId + farmerId + \"/\" + activity._id + \"/\" + materialObj.materialConsumedId}>Edit</Button><Button size=\"sm\" color=\"danger\" onClick={() => this.removeMaterialConsumed(activity._id, materialObj.materialConsumedId)}>Delete</Button></ButtonGroup></td> \r\n                    </tr> \r\n                 )}      \r\n            </table>\r\n        </div>\r\n\r\n    </div>            \r\n    )\r\n\r\n            //  const array1 = [1,2,3,4,5];\r\n            //  const map1 = array1.map(item => item*2 + \",\")\r\n\r\n            \r\n\r\n            return (\r\n                <div>\r\n                    <h1>Activity Profile</h1> \r\n                    <Button  tag={Link} to={linkId + \"new\"}>Add Activity</Button> \r\n                        {activityList} \r\n                </div>\r\n            );\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Profile)","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\About.js",["112"],[],"import React from \"react\";\r\n\r\nconst About = () => {\r\n    let itemNames ;\r\n   \r\n    const resources = [{\r\n        title: 'Learn JS',\r\n        categories: [{\r\n          name: 'javascript'\r\n        }, {\r\n          name: 'css'\r\n        }]\r\n      }, {\r\n        title: 'Learn CSS',\r\n        categories: [{\r\n          name: 'css'\r\n        }]\r\n      }, {\r\n        title: 'Learn other stuff',\r\n        categories: [{\r\n          name: 'jQuery'\r\n        }, {\r\n          name: 'javascript'\r\n        }]\r\n      }, {\r\n        title: 'Learn node',\r\n        categories: [{\r\n          name: 'node'\r\n        }]\r\n      }, {\r\n        title: 'Learn React',\r\n        categories: [{\r\n          name: 'react',\r\n          place : 'singapore'\r\n        }]\r\n      }];\r\n\r\n      const result3= resources.filter(obj => obj.categories.some(cat => cat.place !== 'singapore'));\r\n      console.log(result3);\r\n\r\n    const nodes = [\r\n        {\r\n          label: 'Egor1',\r\n          value: 'Egor1',\r\n          restorePoint: '25/10/2017 10:00:29 PM',\r\n          vmcount: '2',\r\n          restorePointsCount: '',\r\n          children: [\r\n            {\r\n              label: 'disk111111111111111',\r\n              value: 'disk1',\r\n              restorePoint: '3 days ago',\r\n              vmcount: '',\r\n              restorePointsCount: '11',\r\n            },\r\n            {\r\n              label: 'disk22222222222222',\r\n              value: 'disk2',\r\n              name: 'jobname2',\r\n              restorePoint: '4 days ago',\r\n              vmcount: '',\r\n              restorePointsCount: '11',\r\n            },\r\n            {\r\n              label: 'disk555',\r\n              value: 'disk552',\r\n              name: 'jobnam555e2',\r\n              restorePoint: '4 days ago',\r\n              vmcount: '',\r\n              restorePointsCount: '11',\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          label: 'Egor12',\r\n          value: 'Egor12',\r\n          restorePoint: '25/10/2017 10:00:29 PM',\r\n          vmcount: '22',\r\n          restorePointsCount: '',\r\n          children: [\r\n            {\r\n              label: 'disk111111111111111',\r\n              value: 'disk1',\r\n              restorePoint: '2 days ago',\r\n              vmcount: '',\r\n              restorePointsCount: '12',\r\n            },\r\n            {\r\n              label: 'disk22222222222222',\r\n              value: 'disk2',\r\n              name: 'jobname2',\r\n              restorePoint: 'restorepoint4',\r\n              vmcount: '',\r\n              restorePointsCount: '12',\r\n            },\r\n          ],\r\n        },\r\n      ]\r\n\r\n      const value = 'disk552'\r\n\r\n  const result = nodes.map(item => ({\r\n      ...item,\r\n      children: item.children\r\n        .filter(child => child.value !== value)\r\n        // .filter(child => child.value.includes(value.toLowerCase() ))\r\n    }))\r\n    .filter(item => item.children.length > 0)\r\n\r\n    console.log(result)\r\n\r\n//    let nestedObject = [\r\n//         {\r\n//             itemId: 1,\r\n//             itemDetails: {\r\n//                 name: \"C\",\r\n//                 caregory: \"Programming Language\",\r\n//                 price: 500,\r\n//             },\r\n//             itemCategory: \"Basic\",\r\n\r\n//             people:[\r\n//                 {\"peopleId\":\"l5fno4178vvsimzjx1i\",\"peopleName\":\"nasir\",\"peopleWork\":\"mining\",\"peopleWages\":\"2761\"},\r\n//                 {\"peopleId\":\"l5gnp0cwbs4c5qw2cm4\",\"peopleName\":\"john\",\"peopleWork\":\"farmer\",\"peopleWages\":\"5000\"},\r\n//                 {\"peopleId\":\"l5jbtg7glulhhfjn139\",\"peopleName\":\"Kota\",\"peopleWork\":\"farming\",\"peopleWages\":\"287\"},\r\n//                 {\"peopleId\":\"l5jbyi6dccx30bwld95\",\"peopleName\":\"oja\",\"peopleWork\":\"cycling\",\"peopleWages\":\"287\"}\r\n//             ]\r\n\r\n//         },\r\n//         {\r\n//             itemId: 2,\r\n//             itemDetails: {\r\n//                 name: \"C++\",\r\n//                 caregory: \"Programming Language\",\r\n//                 price: 700,\r\n//             },\r\n//             itemCategory: \"Beginner\",\r\n//         },\r\n//         {\r\n//             itemId: 1,\r\n//             itemDetails: {\r\n//                 name: \"Java Script\",\r\n//                 caregory: \"Web Development\",\r\n//                 price: 1500,\r\n//             },\r\n//             itemCategory: \"Advanced\",\r\n//         }]\r\n   \r\n       // itemNames= nestedObject.filter(eachObj => eachObj.itemDetails.price != 1500) \r\n        // itemNames = nestedObject.filter(eachObj => eachObj.people[\"peopleName\"]!= 'kota')\r\n    //    const res2= nestedObject.map(item => ({\r\n    //             ...item,\r\n    //             people:item.people.filter(child  => child.peopleName !== 'john' )\r\n    //             }\r\n    //         )).filter(item => item.people.length > 0)\r\n\r\n    return (\r\n       <div> <ul>{ [1, 2, 3].map(item => <li key=\"{item}\">{item}</li>)} </ul>\r\n        <h1>About</h1> \r\n             {/* {JSON.stringify(itemNames)}  <br></br>    */}\r\n             {/* {res2} */}\r\n        </div>\r\n\r\n\r\n// const hero = [{'id' : 1, 'name' : 'hero1'}, {'id': 2, 'name' : 'hero2'}];\r\n// //remove hero1\r\n// const updatedHero = hero.filter(item => item.id !== 1);\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default About ","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Home.js",["113","114","115"],[],"import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <Link to=\"/login/farmer\">Login as Farmer</Link>\r\n            <br></br>\r\n            <Link to=\"/login/admin\">Login as Admin</Link>            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home ","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Farmer.js",["116"],[],"import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from '../components/WithRouter';\r\n\r\nclass Farmer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {farmers: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        var val = sessionStorage.getItem(\"userType\");\r\n        console.log(\"type : \" + val);\r\n        if(val === 'admin'){\r\n            console.log(\"admin\");\r\n            fetch('/api/farmer')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({farmers: data}));\r\n        }\r\n        else{\r\n            const user = sessionStorage.getItem(\"userName\");\r\n            console.log(\"user : \" + user);\r\n            fetch('/api/farmer/' + \"62c17af5a30d96aa6579ede9\")\r\n            .then(response => response.json())\r\n            .then(data => this.setState({farmers: data}));\r\n        }\r\n    }\r\n\r\n    async remove(id) {\r\n        console.log(\"delete id : \" + id);\r\n        await fetch(`/api/farmer/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n             let updatedFarmers = [...this.state.farmers].filter(i => i._id !== id);\r\n            // setTodos(todos.filter((todo) => todo.id !== id));\r\n             this.setState({farmers: updatedFarmers});\r\n        });\r\n\r\n       // this.props.navigate('/farmer');\r\n    }\r\n\r\n    render() {\r\n        const {farmers} = this.state;\r\n\r\n        const farmerList = farmers.map(farmer => {\r\n            return <tr key={farmer._id}>\r\n                <td>{farmer.name}</td>\r\n                <td>{farmer.district}</td>\r\n                <td>{farmer.contact}</td>\r\n                <td>{farmer.landMapping}</td>\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/farmer/\" + farmer._id}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(farmer._id)}>Delete</Button>\r\n                        <Button size=\"sm\" color=\"dark\" tag={Link} to={\"/farmerProfile/\" + farmer._id}>Profile</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n            <h1>Farmers</h1>\r\n                <Container>\r\n                <div className=\"float-right\">\r\n                    <Button color=\"success\" tag={Link} to=\"/farmer/new\">Add Farmer</Button>\r\n                </div>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"25%\">Name</th>\r\n                            <th width=\"25%\">District</th>\r\n                            <th width=\"25%\">Contact</th>\r\n                            <th width=\"25%\">landMapping</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {farmerList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        )\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Farmer)","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\FarmerEdit.js",[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\components\\WithRouter.js",[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\ActivityEdit.js",["117"],[],"import React, { Component } from 'react';\r\nimport { withRouter } from '../components/WithRouter';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nclass ActivityEdit extends Component {\r\n   // activityDetails = {\r\n    state = {\r\n        _id : '',\r\n        farmerId : this.props.params.farmerId,\r\n        name: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        activityProof: '',\r\n        proof: ''\r\n       \r\n        // people : [],  \r\n        // asset : [], \r\n        // material : []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       // this.state = {activityDetails : this.activityDetails};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n    };\r\n\r\n    async componentDidMount() {\r\n        let activityId = this.props.params.id;\r\n        console.log(\"activity id : \" + activityId);\r\n        if(activityId !== 'new'){\r\n            fetch('/api/activity/1/'+ activityId)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res[0])\r\n                //this.setState({activityDetails: res[0]}); \r\n                this.setState(res[0]); \r\n                this.setState({proof : this.state.activityProof}); \r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    // async handleSubmit(event) {\r\n       \r\n    //     event.preventDefault();\r\n    //     const {activityDetails} = this.state;\r\n    //     console.log(\"activityDetails : \" + activityDetails._id);\r\n    //     await fetch('/api/activity/' + (activityDetails._id ?  activityDetails._id : activityDetails.farmerId), {\r\n    //         //await fetch('/api/activity/' + activityDetails.farmerId, {\r\n    //         method: (activityDetails._id) ? 'PUT' : 'POST',\r\n    //         // method: 'POST',\r\n    //         headers: {\r\n    //             'Accept': 'application/json',\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify(activityDetails),\r\n    //     });\r\n\r\n    //     this.props.navigate('/farmerProfile/' + activityDetails.farmerId);  \r\n        \r\n    // }\r\n\r\n    async handleSubmit(event) {\r\n       \r\n        // const form = document.querySelector(\"form\")\r\n        // const formData = new FormData(form);\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('name', this.state.name);\r\n        formData.append('startDate', this.state.startDate);\r\n        formData.append('endDate', this.state.endDate);\r\n        if (this.state.activityProof)\r\n            formData.append('activityProof', this.state.activityProof);\r\n        else \r\n            formData.append('activityProof', this.state.proof);\r\n        console.log(\"formData:\"+formData.get('activityProof'))\r\n        console.log(formData)\r\n        event.preventDefault();\r\n        const {activityDetails} = this.state;\r\n        //console.log(\"activityDetails : \" + activityDetails._id);\r\n        console.log(\"activityDetails : \" +  this.state._id);\r\n        if(this.state._id) {\r\n            axios.put('/api/activity/' + this.state._id, formData, {   \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n                //body: formData\r\n            });\r\n        }\r\n        else {\r\n            axios.post('/api/activity/' + this.state.farmerId, formData, {   \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n                //body: formData\r\n            });\r\n        }\r\n        this.props.navigate('/farmerProfile/' + this.state.farmerId);  \r\n        \r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        //const name1 = target.name;\r\n       // let activityDetails = {...this.state.activityDetails};\r\n        //let activityDetails = {...this.state};\r\n        //activityDetails[name1] = value;\r\n        // if (name == 'activityProof' ) {\r\n        //     console.log(event.target.files);\r\n        //     activityDetails[name]=event.target.files[0]\r\n        // }\r\n      \r\n        //this.setState({activityDetails});\r\n        //const value = event.target.value;\r\n  this.setState({\r\n    ...this.state,\r\n    [event.target.name]: value\r\n  });\r\n    }\r\n\r\n    handleFileChange(e) {\r\n        console.log(e.target.files);\r\n       \r\n        this.setState({activityProof: e.target.files[0] }); \r\n   \r\n    }\r\n\r\n\r\n    // onFileUpload = () => { \r\n    //     console.log(\"inside fileupload:\");\r\n    //     // Create an object of formData \r\n    //     const formData = new FormData(); \r\n       \r\n    //     // Update the formData object \r\n    //     formData.append( \r\n    //       \"myFile\", \r\n    //       this.state.selectedFile \r\n    //      // this.state.selectedFile.name \r\n    //     ); \r\n       \r\n    //     // Details of the uploaded file \r\n    //     console.log(\"fileupload:\"+this.state.selectedFile); \r\n       \r\n    //     // Request made to the backend api \r\n    //     // Send formData object \r\n    //     //axios.post(\"api/uploadfile\", formData); \r\n    //   }; \r\n\r\n\r\n       \r\n\r\n    render() {\r\n        //const {activityDetails} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{this.state._id ? \"ActivityEdit\" : \"ActivityAdd\"}</h1>\r\n                <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.name || ''}\r\n                               onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"startDate\">StartDate</Label>\r\n                        <Input type=\"date\" name=\"startDate\" id=\"startDate\" value={this.state.startDate }\r\n                               onChange={this.handleChange} autoComplete=\"startDate\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"endDate\">EndDate</Label>\r\n                        <Input type=\"date\" name=\"endDate\" id=\"endDate\" value={this.state.endDate || ''}\r\n                               onChange={this.handleChange} autoComplete=\"endDate\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    {/* : {this.state.activityProof || ''} */}\r\n                        <Label for=\"activityProof\">ActivityProof : {this.state.proof || ''} </Label> <br></br>\r\n                        <input type=\"file\" name=\"activityProof\" id=\"activityProof\" onChange={this.handleFileChange} />\r\n                        <input type=\"hidden\" name=\"proof\" value={this.state.activityProof || ''} />\r\n                        {/* <button onClick={this.onFileUpload}> Upload! </button>   */}\r\n                        {/* <img src={file} /> */}\r\n                        {/* <Input type=\"test\" name=\"activityProof\" id=\"activityProof\" value={activityDetails.activityProof || ''} \r\n                               onChange={this.handleChange} autoComplete=\"activityProof\"/> */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\" >Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to={\"/farmerProfile/\" + this.state.farmerId}>Cancel</Button>\r\n                        {/* <Button color=\"secondary\" onClick={() => navigate(-1)}>Cancel</Button> */}\r\n                    </FormGroup>\r\n                </Form>\r\n               \r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(ActivityEdit)\r\n\r\n","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\AssetEdit.js",[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\MaterialConsumedEdit.js",[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\PeopleEdit.js",[],[],"C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Contact.js",["118","119"],[],"//import React from \"react\";\r\n\r\n// const Contact = () => {\r\n\r\n//     return (\r\n//         <h1>Contact</h1>\r\n//     )\r\n\r\n// }\r\n\r\n// export default Contact \r\n\r\nimport React, { Component } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { withRouter } from '../components/WithRouter';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  \r\n  // Nested object\r\n  state = {\r\n   // peopleDetails = {\r\n    name1: '',\r\n    address: {\r\n      colony: 'vaishnav nagar',\r\n      city: '',\r\n      state: 'Rajasthan'\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //this.state.address.city='';\r\n    //this.state.name='';\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    console.log(\"componentDidMount:\")\r\n   // this.props.navigate('home'); \r\n   //return this.props.navigation.navigate('home') \r\n   //return <Redirect to='/home' />  \r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    // Creating a dummy object using spread operator\r\n    //var address = { ...this.state.address }\r\n  \r\n    // Updating the city\r\n    //address.city = 'Kota';\r\n    //address[name] = value;\r\n    //this.setState({ address })\r\n\r\n    let obj = { ...this.state }\r\n    \r\n    //obj[name]=value;\r\n    obj.address[name]=value\r\n    this.setState({ obj })\r\n        \r\n  }\r\n  \r\n  render() {\r\n    var val = sessionStorage.getItem(\"userType\");\r\n\r\n    return (\r\n      <div style={{ margin: 200 }}>\r\n        {val }\r\n        <h1>{this.state.name1}</h1>\r\n        <h1>{this.state.address.colony} {\",\"}\r\n          {this.state.address.city}{\", \"}\r\n          {this.state.address.state}</h1>\r\n        <button\r\n          onClick={this.handleChange}\r\n        >UpdateCity </button>\r\n\r\n      <Form >            \r\n            <FormGroup>\r\n                <Label for=\"city\">city</Label>\r\n                <Input type=\"text\" name=\"city\" id=\"city\"  value={this.state.address.city || ''}\r\n                        onChange={this.handleChange} \r\n                        />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"name1\">name</Label>\r\n                <Input type=\"text\" name=\"name1\" id=\"name1\"  value={this.state.name1 || ''}\r\n                        onChange={this.handleChange} \r\n                        />\r\n            </FormGroup>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\nexport default withRouter(Contact);","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Test.js",["120","121","122","123","124","125"],[],"import React from 'react';\r\n\r\n    class Test extends React.Component {   \r\n  \r\n    //user={\r\n    state = {   \r\n      //  user:{\r\n    username: '',\r\n    email: '',\r\n        address: {\r\n        state: '',\r\n        city: '',\r\n        geolocation: {\r\n            lat: '',\r\n            long: ''\r\n        }\r\n        }\r\n    //}\r\n};\r\n\r\n\r\n constructor(props) {\r\n    super(props)\r\n   //this.state = {user : this.user};\r\n   \r\n    \r\n    this.onChange = this.onChange.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n   onChange (e) {\r\n    let data = { ...this.state };\r\n    let name = e.target.name;\r\n    let val = e.target.value;\r\n    if (name == 'username' || name == 'email') {\r\n      data = { ...data, [name]: val };\r\n    } else if (name == 'state' || name == 'city') {\r\n      data = {\r\n        ...data,\r\n        address: {\r\n          ...data.address,\r\n          [name]: val\r\n        }\r\n      };\r\n    } else if (name == 'lat' || name == 'long') {\r\n      data = {\r\n        ...data,\r\n        address: {\r\n          ...data.address,\r\n          geolocation: {\r\n            ...data.address.geolocation,\r\n            [name]: val\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    this.setState(data);\r\n  };\r\n\r\n  submit(e){\r\n    e.preventDefault();\r\n    console.log(JSON.stringify(this.state));\r\n  };\r\n\r\n  render() {\r\n  // let {user} =this.state; \r\n  return (\r\n    <div>\r\n      <form action=\"\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email\"\r\n            value={this.state.email}\r\n            name=\"email\"\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"State\"\r\n            name=\"state\"\r\n            value={this.state.address.state}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"City\"\r\n            name=\"city\"\r\n            value={this.state.address.city}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Latitude\"\r\n            value={this.state.address.geolocation.lat}\r\n            name=\"lat\"\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Longitude\"\r\n            value={this.state.address.geolocation.long}\r\n            name=\"long\"\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary\" onClick={this.submit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Test ","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Test1.js",["126","127","128","129","130","131"],[],"import React from 'react';\r\nexport default function App() {\r\n  const [user, setUser] = React.useState({\r\n    username: '',\r\n    email: '',\r\n    address: {\r\n      state: '',\r\n      city: '',\r\n      geolocation: {\r\n        lat: '',\r\n        long: ''\r\n      }\r\n    }\r\n  });\r\n  const onChange = e => {\r\n    let data = { ...user };\r\n    let name = e.target.name;\r\n    let val = e.target.value;\r\n    if (name == 'username' || name == 'email') {\r\n      data = { ...data, [name]: val };\r\n    } else if (name == 'state' || name == 'city') {\r\n      data = {\r\n        ...data,\r\n        address: {\r\n          ...data.address,\r\n          [name]: val\r\n        }\r\n      };\r\n    } else if (name == 'lat' || name == 'long') {\r\n      data = {\r\n        ...data,\r\n        address: {\r\n          ...data.address,\r\n          geolocation: {\r\n            ...data.address.geolocation,\r\n            [name]: val\r\n          }\r\n        }\r\n      };\r\n    }\r\n    setUser(data);\r\n  };\r\n  const submit = e => {\r\n    e.preventDefault();\r\n    console.log(JSON.stringify(user));\r\n  };\r\n  return (\r\n    <div>\r\n      <form action=\"\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={user.username}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email\"\r\n            value={user.email}\r\n            name=\"email\"\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"State\"\r\n            name=\"state\"\r\n            value={user.address.state}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"City\"\r\n            name=\"city\"\r\n            value={user.address.city}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Latitude\"\r\n            value={user.address.geolocation.lat}\r\n            name=\"lat\"\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Longitude\"\r\n            value={user.address.geolocation.long}\r\n            name=\"long\"\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary\" onClick={submit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\FileUpload.js",["132","133"],[],"import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass FileUpload extends Component {\r\n   state={\r\n    activityProof:'',\r\n    dat:''\r\n   }\r\n\r\n   constructor(props) {\r\n    super(props);\r\n   }\r\n\r\n    handleFileChange = e => {\r\n   // this.setState({ file: e.target.files[0] });\r\n   this.setState({activityProof: e.target.files[0] }); \r\n  };\r\n\r\n  handleChange = e => {\r\n   //this.setState({ text: e.target.value });\r\n    this.setState({ dat: e.target.value }); \r\n  };\r\n\r\n\r\n \r\n\r\n  upload = () => {\r\n    if (this.state.activityProof) {\r\n      let formData = new FormData();\r\n      formData.append(\"activityProof\", this.state.activityProof);\r\n      formData.set(\"dat\", this.state.dat);\r\n\r\n     \r\n\r\n\r\n\r\n\r\n      //  axios.post(\"/upload\", formData, {    \r\n          axios.post(\"/api/activity\", formData, {    \r\n        })\r\n      .then(res => { \r\n        console.log(res.statusText)\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type=\"text\"  name=\"dat\" onChange={this.handleChange} />\r\n        <br></br>\r\n        <input type=\"file\" name=\"activityProof\" onChange={this.handleFileChange} />\r\n        <input type=\"button\" onClick={this.upload} value=\"Upload\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FileUpload;","C:\\Saumya\\Projects\\Agri\\client\\src\\pages\\Login.js",[],[],{"ruleId":"134","severity":1,"message":"135","line":6,"column":7,"nodeType":"136","endLine":6,"endColumn":44},{"ruleId":"137","severity":1,"message":"138","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"141","line":2,"column":31,"nodeType":"139","messageId":"140","endLine":2,"endColumn":40},{"ruleId":"137","severity":1,"message":"142","line":157,"column":17,"nodeType":"139","messageId":"140","endLine":157,"endColumn":26},{"ruleId":"137","severity":1,"message":"143","line":4,"column":9,"nodeType":"139","messageId":"140","endLine":4,"endColumn":18},{"ruleId":"137","severity":1,"message":"144","line":3,"column":27,"nodeType":"139","messageId":"140","endLine":3,"endColumn":33},{"ruleId":"137","severity":1,"message":"145","line":3,"column":35,"nodeType":"139","messageId":"140","endLine":3,"endColumn":41},{"ruleId":"137","severity":1,"message":"146","line":3,"column":43,"nodeType":"139","messageId":"140","endLine":3,"endColumn":48},{"ruleId":"147","severity":1,"message":"148","line":25,"column":34,"nodeType":"149","messageId":"150","endLine":25,"endColumn":35},{"ruleId":"137","severity":1,"message":"151","line":84,"column":16,"nodeType":"139","messageId":"140","endLine":84,"endColumn":31},{"ruleId":"137","severity":1,"message":"152","line":14,"column":10,"nodeType":"139","messageId":"140","endLine":14,"endColumn":16},{"ruleId":"137","severity":1,"message":"141","line":14,"column":18,"nodeType":"139","messageId":"140","endLine":14,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":35,"column":14,"nodeType":"149","messageId":"155","endLine":35,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":35,"column":36,"nodeType":"149","messageId":"155","endLine":35,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":37,"column":21,"nodeType":"149","messageId":"155","endLine":37,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":37,"column":40,"nodeType":"149","messageId":"155","endLine":37,"endColumn":42},{"ruleId":"153","severity":1,"message":"154","line":45,"column":21,"nodeType":"149","messageId":"155","endLine":45,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":45,"column":38,"nodeType":"149","messageId":"155","endLine":45,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":19,"column":14,"nodeType":"149","messageId":"155","endLine":19,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":19,"column":36,"nodeType":"149","messageId":"155","endLine":19,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":21,"column":21,"nodeType":"149","messageId":"155","endLine":21,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":21,"column":40,"nodeType":"149","messageId":"155","endLine":21,"endColumn":42},{"ruleId":"153","severity":1,"message":"154","line":29,"column":21,"nodeType":"149","messageId":"155","endLine":29,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":29,"column":38,"nodeType":"149","messageId":"155","endLine":29,"endColumn":40},{"ruleId":"137","severity":1,"message":"156","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":11,"column":4,"nodeType":"159","messageId":"160","endLine":13,"endColumn":5},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'mainstyle' is assigned a value but never used.","'itemNames' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'activityDetails' is assigned a value but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'ReactDOM' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]